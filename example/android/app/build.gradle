def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

ext {
    // java desugar
    desugar_jdk_libs_version = '2.1.2'
}

import static org.gradle.api.JavaVersion.VERSION_11
android {
    // compileSdkVersion 34  // deprecated

    compileOptions {
        compileSdk 34
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 11
        sourceCompatibility VERSION_11
        targetCompatibility VERSION_11
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "tech.sharpbitstudio.web_socket_support_example"
        minSdkVersion 27
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
        debug {
            testCoverageEnabled true
            enableUnitTestCoverage true
            enableAndroidTestCoverage true
        }
    }
    lint {
        checkDependencies true
        disable 'InvalidPackage'
    }
    namespace 'tech.sharpbitstudio.web_socket_support_example'
}

flutter {
    source '../..'
}

dependencies {
    androidTestImplementation 'androidx.test:runner:1.6.2'
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$desugar_jdk_libs_version"
}
